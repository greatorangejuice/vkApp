{"version":3,"sources":["panels/Home.js","panels/Order-form.js","panels/Orders.js","App.js","index.js"],"names":["withRouter","props","useState","course","subjectId","faculty","navigateTo","path","history","push","title","fetchedUser","first_name","size","level","onClick","mode","useEffect","a","axios","get","then","res","data","results","subjects","setSubjects","taskTypes","setTaskTypes","faculties","setFaculties","bridge","send","user","setUser","setOrderState","orderState","isLoaded","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","universityId","facultyId","description","dueDate","taskTypeId","customerVkId","errorMessage","valid","touched","validation","required","formControls","setFormControls","submitForm","console","log","state","id","moment","day","month","year","add","post","goToMain","handleChange","e","name","currentTarget","currentControl","target","dates","Date","getDate","getMonth","getFullYear","top","placeholder","options","map","label","university","onChange","disabled","filter","facultyItem","task","subject","min","onDateChange","dayPlaceholder","monthPlaceholder","yearPlaceholder","Orders","orders","setOrders","setState","order","i","key","taskType","status","format","ROUTES","App","ScreenSpinner","setPopout","href","exact","component","Home","render","OrderForm","application","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8a4a782b.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Div, Group, Panel} from \"@vkontakte/vkui\";\nimport {withRouter} from \"react-router-dom\";\n\nconst Home = (props) => {\n    const initialState = {\n        course: 1,\n        subjectId: null,\n        faculty: null,\n    }\n    const [state, setState] = useState(initialState)\n\n    const navigateTo = (path) => {\n        props.history.push(path)\n    }\n\n    return (\n        <Panel>\n\n            <Group title=\"Navigation Example\">\n                <p> Привет, {props.fetchedUser?.first_name || 'user'}, здесь ты можешь оставить заявку на выполнение\n                    какой-либо работы, будь то лаба, контрольная, курсач\n                </p>\n                <p>После заполнения формы убедись, что личные сообщения открыты и к тебе можно постучаться в личные сообщения</p>\n                <Div>\n                    <Button size=\"m\" level=\"2\"  onClick={() => {navigateTo('/order-form')}}>\n                        Создать новое задание\n                    </Button>\n                    <Button size=\"m\" level=\"2\" mode='secondary' onClick={() => {navigateTo('/orders')}}>\n                        Посмотреть текущие\n                    </Button>\n                </Div>\n            </Group>\n\n        </Panel>\n    )\n};\n\nexport default withRouter(Home);\n","import React, {useEffect, useState} from \"react\";\r\nimport {Button, DatePicker, FormItem, FormLayout, Input, Panel, Select, Textarea} from \"@vkontakte/vkui\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport axios from \"axios\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport * as moment from \"moment\"\r\n\r\n\r\nconst OrderForm = (props) => {\r\n    useEffect(() => {\r\n        bridge.subscribe(({detail: {type, data}}) => {\r\n            if (type === 'VKWebAppUpdateConfig') {\r\n                const schemeAttribute = document.createAttribute('scheme');\r\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n                document.body.attributes.setNamedItem(schemeAttribute);\r\n            }\r\n        });\r\n\r\n        async function fetchData() {\r\n            const subjects = await axios.get('http://localhost:3005/api/subjects')\r\n                .then(res => {\r\n                    return res.data.results\r\n                })\r\n            setSubjects(subjects)\r\n            const taskTypes = await axios.get('http://localhost:3005/api/task-types')\r\n                .then(res => {\r\n                    return res.data.results\r\n                })\r\n            setTaskTypes(taskTypes)\r\n\r\n            const faculties = await axios.get('http://localhost:3005/api/faculties')\r\n                .then(res => {\r\n                    return res.data.results\r\n                })\r\n            setFaculties(faculties)\r\n\r\n            const user = await bridge.send('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            setOrderState({...orderState, isLoaded: true})\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const initialState = {\r\n        course: 1,\r\n        subjectId: null,\r\n        universityId: null,\r\n        facultyId: null,\r\n        description: null,\r\n        dueDate: null,\r\n        taskTypeId: null,\r\n        customerVkId: null,\r\n        isLoaded: false,\r\n    }\r\n    const initialControls = {\r\n        course: {\r\n            errorMessage: 'Введите корректный курс',\r\n            valid: false,\r\n            touched: false,\r\n            validation: {\r\n                required: false,\r\n            }\r\n        },\r\n        description: {\r\n            errorMessage: 'Введите подробное описание',\r\n            valid: false,\r\n            touched: false,\r\n            validation: {\r\n                required: true,\r\n            }\r\n        }\r\n    }\r\n\r\n    const [orderState, setOrderState] = useState(initialState)\r\n    const [subjects, setSubjects] = useState([])\r\n    const [taskTypes, setTaskTypes] = useState([])\r\n    const [faculties, setFaculties] = useState([])\r\n    const [formControls, setFormControls] = useState(initialControls)\r\n    const [user, setUser] = useState(null);\r\n\r\n\r\n    const submitForm = async () => {\r\n        console.log(orderState)\r\n        try {\r\n            const state = {...orderState};\r\n            const data = {\r\n                ...orderState,\r\n                taskTypeId: +state.taskTypeId,\r\n                universityId: +state.universityId,\r\n                facultyId: +state.facultyId,\r\n                subjectId: +state.subjectId,\r\n                customerVkId: user.id,\r\n                title: 'new Task',\r\n                dueDate: moment({day: state.dueDate.day, month: state.dueDate.month, year: state.dueDate.year}).add(-1, \"month\")\r\n            }\r\n            console.log(data)\r\n            return await axios.post('http://localhost:3005/api/tasks/createfromvk', data).then(\r\n                () => {\r\n                    goToMain()\r\n                }\r\n            )\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const test = () => {\r\n        const state = {...orderState};\r\n        console.log(state)\r\n        console.log(moment({day: state.dueDate.day, month: state.dueDate.month, year: state.dueDate.year}).add(-1, \"month\"))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const {name} = e.currentTarget;\r\n        const currentControl = {...formControls[name], touched: true}\r\n\r\n        setOrderState({...orderState, [name]: e.target.value});\r\n        setFormControls({...formControls, [name]: currentControl})\r\n    }\r\n\r\n    const dates = {day: new Date().getDate() + 1, month: new Date().getMonth() + 1, year: new Date().getFullYear()};\r\n\r\n\r\n    if (!orderState.isLoaded) {\r\n        return (\r\n            <Panel>\r\n                Loading\r\n            </Panel>\r\n        )\r\n    }\r\n\r\n    const goToMain = () => {\r\n        props.history.push('/')\r\n    }\r\n\r\n    return (\r\n        <Panel>\r\n            <FormLayout>\r\n\r\n                <FormItem top=\"Университет\">\r\n                    <Select\r\n                        placeholder=\"Не выбран\"\r\n                        name='universityId'\r\n                        options={faculties.map((faculty) => (\r\n                            {label: faculty.university.title, value: faculty.university.id}\r\n                        ))}\r\n                        onChange={(e) => {\r\n                            handleChange(e)\r\n                        }}\r\n                    />\r\n                </FormItem>\r\n\r\n                <FormItem top=\"Факультет\">\r\n                    <Select\r\n                        disabled={!orderState.universityId}\r\n                        placeholder=\"Не выбран\"\r\n                        name='facultyId'\r\n                        options={faculties.filter((faculty) => {\r\n                            return faculty.university.id === +orderState.universityId\r\n                        }).map((facultyItem) => (\r\n                            {label: facultyItem.title, value: facultyItem.id}\r\n                        ))}\r\n                        onChange={(e) => {\r\n                            handleChange(e)\r\n                        }}\r\n                    />\r\n                </FormItem>\r\n\r\n                {/*{formControls.course.touched ? <div>1</div> : <div>2</div>}*/}\r\n                <FormItem\r\n                    top=\"Курс\"\r\n                >\r\n                    <Input\r\n                        type='number'\r\n                        name=\"course\"\r\n                        value={orderState.course}\r\n                        onChange={(e) => {\r\n                            handleChange(e)\r\n                        }}\r\n                    />\r\n                </FormItem>\r\n\r\n                <FormItem top=\"Тип задания\">\r\n                    <Select\r\n                        placeholder=\"Не выбран\"\r\n                        name='taskTypeId'\r\n                        options={taskTypes.map((task) => (\r\n                            {label: task.title, value: task.id}\r\n                        ))}\r\n                        onChange={(e) => {\r\n                            handleChange(e)\r\n                        }}\r\n                    />\r\n                </FormItem>\r\n\r\n                <FormItem top=\"Предмет\">\r\n                    <Select\r\n                        placeholder=\"Не выбран\"\r\n                        options={subjects.map((subject) => (\r\n                            {label: subject.title, value: subject.id}\r\n                        ))}\r\n                        name='subjectId'\r\n                        onChange={(e) => {\r\n                            handleChange(e)\r\n                        }}\r\n                    />\r\n                </FormItem>\r\n\r\n                <FormItem top=\"Описание задания\">\r\n                    <Textarea\r\n                        name='description'\r\n                        onChange={(e) => {\r\n                            handleChange(e)\r\n                        }}\r\n                        placeholder=\"Подробное описание того, что тебе нужно сделать\"/>\r\n                </FormItem>\r\n\r\n                <FormItem top=\"Срок выполнения\">\r\n                    <DatePicker\r\n                        min={dates}\r\n                        name='dueDate'\r\n                        onDateChange={(value) => {\r\n                            setOrderState({...orderState, dueDate: value})\r\n                        }}\r\n                        dayPlaceholder=\"ДД\"\r\n                        monthPlaceholder=\"ММММ\"\r\n                        yearPlaceholder=\"ГГГГ\"\r\n                    />\r\n                </FormItem>\r\n\r\n                <Button\r\n                    onClick={submitForm}>Отправить</Button>\r\n            </FormLayout>\r\n        </Panel>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(OrderForm);\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport axios from \"axios\";\r\nimport {Div, Panel} from \"@vkontakte/vkui\";\r\nimport * as moment from \"moment\"\r\n\r\nconst Orders = () => {\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const user = await bridge.send('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            const orders = await axios.get(`http://localhost:3005/api/tasks/vk-user-orders/${user.id}`)\r\n                .then(res => {\r\n                    return res.data.results\r\n                })\r\n            setOrders(orders)\r\n            setState({...state, isLoaded: true})\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    const initialState = {\r\n        isLoaded: false\r\n    }\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [orders, setOrders] = useState(null);\r\n    const [state, setState] = useState(initialState);\r\n    if (!state.isLoaded) {\r\n        return (\r\n            <div>Loading</div>\r\n        )\r\n    }\r\n    return (\r\n        <Panel>\r\n            <h3>Ваши текущие заявки</h3>\r\n            <Div>\r\n                <ul>\r\n                    {orders.map((order, i) => (\r\n                        <div key={i}>\r\n                            <div>\r\n                                <div>{order.taskType.title} по предмету {order.subject.title}</div>\r\n                                <div>Статус: {order.status ? <p>Кто-то взял и скоро свяжется :)</p> : <p>Пока никто не взял</p>}</div>\r\n                                <div>Срок выполнения: до {moment(order.dueDate).format('DD MM YYYY')}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    ))}\r\n                </ul>\r\n            </Div>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","import React, {useEffect, useState} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {Route} from 'react-router-dom';\n\nimport Home from './panels/Home';\nimport OrderForm from \"./panels/Order-form\";\nimport Orders from \"./panels/Orders\";\n\nconst ROUTES = {\n    HOME: 'home',\n    FORM: 'form',\n    TESTFORM: 'order'\n}\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState(ROUTES.HOME);\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n\n    useEffect(() => {\n        bridge.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n\n        async function fetchData() {\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n            setPopout(null);\n        }\n\n        fetchData();\n    }, []);\n\n\n    return (\n        <div>\n            <nav>\n                <ul>\n                    <li><a href=\"/order-form\">Создать задание</a></li>\n                    <li><a href=\"/orders\">Посмотреть текущие</a></li>\n                </ul>\n            </nav>\n            <Route path='/' exact component={Home} render={() => <h1>HomePage</h1>}/>\n            <Route path='/order-form' component={OrderForm}/>\n            <Route path='/orders' component={Orders}/>\n        </div>\n\n    );\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nconst application = (\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n)\n\nReactDOM.render(application, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}